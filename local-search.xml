<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>cpp</title>
    <link href="/2023/01/30/cpp/"/>
    <url>/2023/01/30/cpp/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>todo</title>
    <link href="/2023/01/30/todo/"/>
    <url>/2023/01/30/todo/</url>
    
    <content type="html"><![CDATA[<ul><li><input disabled="" type="checkbox"> LPR</li><li><input disabled="" type="checkbox"> 导航软件</li><li><input disabled="" type="checkbox"> 零散技术整理：duilib，环形缓冲区</li><li><input disabled="" type="checkbox"> 博客搭建</li><li><input disabled="" type="checkbox"> skynet</li><li><input disabled="" type="checkbox"> C++语法博客整理</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>test</tag>
      
      <tag>test2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2023/01/29/test/"/>
    <url>/2023/01/29/test/</url>
    
    <content type="html"><![CDATA[<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">操作系统<br>Linux命令以及原理<br>Linux <span class="hljs-keyword">shell</span><span class="language-bash"> awd sed</span><br></code></pre></td></tr></table></figure><h2 id="Linux的进程、线程、文件描述符是什么"><a href="#Linux的进程、线程、文件描述符是什么" class="headerlink" title="Linux的进程、线程、文件描述符是什么"></a>Linux的进程、线程、文件描述符是什么</h2><h2 id="Linux目录"><a href="#Linux目录" class="headerlink" title="Linux目录"></a>Linux目录</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs awk">【Linux与Windows默认目录匹对】<br><span class="hljs-regexp">/usr → C:/</span>Windows<span class="hljs-regexp">/ /</span>*系统级的目录<br><span class="hljs-regexp">/usr/</span>lib → C:<span class="hljs-regexp">/Windows/</span>System32<br><span class="hljs-regexp">/usr/</span>local → C:<span class="hljs-regexp">/Progrem Files/</span> /*用户级的程序目录，用户自己编译的软件默认会安装到这个目录下<br><span class="hljs-regexp">/opt → D:/</span>Software <span class="hljs-regexp">/*用户级的程序目录, opt有可选的意思，即自定义路径，当你不需要时，直接 rm -rf 掉即可。在硬盘容量不够时，也可将 /</span>opt 单独挂载到其他磁盘上使用。<br><br>【源码存放位置】<br><span class="hljs-regexp">/usr/</span>src /*系统级的源码目录。<br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/src /</span>*用户级的源码目录。<br><br>【目录解释】<br>/opt<br>这里主要存放那些可选的程序装到<span class="hljs-regexp">/opt目录下，这样，当你尝试完，想删掉软件程序的时候，你就可 以直接删除它，而不影响系统其他任何设置。安装到/</span>opt目录下的程序，它所有的数据、库文件等等都是放在同个目录下面。<br><span class="hljs-regexp">/usr/</span>local<br>它和<span class="hljs-regexp">/usr目录具有相类似的目录结构。让软件包管理器来管理/u</span>sr目录，而把自定义的脚本(scripts)放到<span class="hljs-regexp">/usr/</span>local目录下面。<br><br>【常用目录及用途】<br>/bin 存放二进制可执行文件（ls,cat,mkdir等），常用命令一般都在这里。<br>/etc 存放系统管理和配置文件<br><span class="hljs-regexp">/home 存放所有用户文件的根目录，是用户主目录的基点，比如用户user的主目录就是/</span>home/user，可以用~user表示<br><span class="hljs-regexp">/usr 用于存放系统应用程序，比较重要的目录/u</span>sr/local 本地系统管理员软件安装目录（安装系统级的应用）。这是最庞大的目录，要用到的应用程序和文件几乎都在这个目录。<br><span class="hljs-regexp">/usr/</span>bin 众多的应用程序<br><span class="hljs-regexp">/usr/</span>sbin 超级用户的一些管理程序<br><span class="hljs-regexp">/usr/</span>doc linux文档<br><span class="hljs-regexp">/usr/i</span>nclude linux下开发和编译应用程序所需要的头文件<br><span class="hljs-regexp">/usr/</span>lib 常用的动态链接库和软件包的配置文件<br><span class="hljs-regexp">/usr/m</span>an 帮助文档<br><span class="hljs-regexp">/usr/</span>src 源代码，linux内核的源代码就放在<span class="hljs-regexp">/usr/</span>src/linux里<br><span class="hljs-regexp">/usr/</span>local/bin 本地增加的命令<br><span class="hljs-regexp">/usr/</span>local/lib 本地增加的库<br>/opt 额外安装的可选应用程序包所放置的位置。一般情况下，我们可以把tomcat等都安装到这里。<br>/proc 虚拟文件系统目录，是系统内存的映射。可直接访问这个目录来获取系统信息。<br>/root 超级用户（系统管理员）的主目录（特权阶级^o^）<br>/sbin 存放二进制可执行文件，只有root才能访问。这里存放的是系统管理员使用的系统级别的管理命令和程序。如ifconfig等。<br>/dev 用于存放设备文件。<br>/mnt 系统管理员安装临时文件系统的安装点，系统提供这个目录是让用户临时挂载其他的文件系统。<br>/boot 存放用于系统引导时使用的各种文件<br>/lib 存放跟文件系统中的程序运行所需要的共享库及内核模块。共享库又叫动态链接共享库，作用类似windows里的.dll文件，存放了根文件系统程序运行所需的共享文件。<br>/tmp 用于存放各种临时文件，是公用的临时文件存储点。<br>/var 用于存放运行时需要改变数据的文件，也是某些大文件的溢出区，比方说各种服务的日志文件（系统启动日志等。）等。<br></code></pre></td></tr></table></figure><h2 id="Ubuntu软件源"><a href="#Ubuntu软件源" class="headerlink" title="Ubuntu软件源"></a>Ubuntu软件源</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs awk">修改软件源<br><span class="hljs-comment"># 首先备份源列表</span><br>sudo cp <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list /</span>etc<span class="hljs-regexp">/apt/</span>sources.list_backup<br><br>编辑<span class="hljs-regexp">/etc/</span>apt/sources.list文件, 在文件最前面添加阿里云镜像源：<br><br><span class="hljs-comment">#  阿里源</span><br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic main restricted universe multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-security main restricted universe multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-proposed main restricted universe multiverse<br>deb http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-backports main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-security main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-proposed main restricted universe multiverse<br>deb-src http:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ubuntu/</span> bionic-backports main restricted universe multive<br><br>sudo apt-get update<br>sudo apt-get upgrade<br>sudo apt-get install build-essential<span class="hljs-regexp">//</span>这一步什么意思<br><br><br><br>修改环境变量<br>vim <span class="hljs-regexp">/etc/</span>profile<br><br>修改主机名<br>vim <span class="hljs-regexp">/etc/</span>hostname<br><br>目录结构<br></code></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">find</span>用于查找文件<br><span class="hljs-keyword">grep</span>用于查找文件中文本<br><br></code></pre></td></tr></table></figure><h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">一个<span class="hljs-keyword">shell</span><span class="language-bash">必备的内容：</span><br>sed awd<br>日志<br></code></pre></td></tr></table></figure><h2 id="vim操作"><a href="#vim操作" class="headerlink" title="vim操作"></a>vim操作</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs excel">删除全部内容：ggdG<br><br>删除到行尾内容：D<br>剪切到行尾内容：dd<br>复制一行：yy<br>粘贴到光标前：P<br>粘贴到光标后：p<br><br>光标前插入字符：i<br>光标后插入字符：a<br>当前行上插入一空行：O<br>当前行下插入一空行：o<br><br>撤销：u<br>重做：ctrl+r<br><br><br>第一行：gg<br>最后一行：G<br>到第X行：XG<br>到第X行：<span class="hljs-symbol">:X</span><br>到句首：（<br>到句尾：）<br>到段首：&#123;<br>到段尾：&#125;<br><br>向上滚屏：ctrl+y<br>向下滚屏：ctrl+e<br><br><br>/，<span class="hljs-built_in">n</span>向下搜索，<span class="hljs-built_in">N</span>向上搜索（<span class="hljs-built_in">N</span>是反向）<br>？，<span class="hljs-built_in">n</span>向上搜索，<span class="hljs-built_in">N</span>向下搜索（<span class="hljs-built_in">N</span>是反向）<br>直接输入即可，也可输入：在输入/或者？<br><br>可视模式：<br>左下上右：ghjkf<br><br>保存：w<br>退出：q<br>保存退出：wq/ZZ<br>不保存退出：q!/ZQ/!q是错的<br>另存为：w filename<br><br><br>退出编译模式：esc,ctrl c,ctrl [<br><br><br><br>列多选<span class="hljs-symbol">:ct</span>rl+v<br>r替换<br>可以使用G选中到末尾，或者使用hjkl选中多行<br><br><br><br><br>vim与emacs：需要用到的时候才学习其他<br>vim-plus插件管理<br>d删除<br></code></pre></td></tr></table></figure><h2 id="vim使用普通用户，保存root权限文件"><a href="#vim使用普通用户，保存root权限文件" class="headerlink" title="vim使用普通用户，保存root权限文件"></a>vim使用普通用户，保存root权限文件</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs vim">:<span class="hljs-keyword">w</span> !sudo tee %<br>这条命令的含义是把当前编辑的文件的内容当做标准输入输入到命令 sudo tee 文件名 里去<br><span class="hljs-keyword">vim</span> 命令:<span class="hljs-keyword">w</span> !&#123;cmd&#125;，让<span class="hljs-keyword">vim</span>执行一个外部命令 &#123;cmd&#125;，然后把当前缓冲区的内容从 stdin 传入外部命令&#123;cmd&#125;。<br>外部命令就是一个 Linux 的 <span class="hljs-keyword">shell</span> 命令<br>Linux tee 命令用于读取标准输入的数据，并将其内容 输出成文件 和 标准输出。<br>% 代表当前缓冲区<br>类似一个 Linux 管道 : stdin | tee <span class="hljs-keyword">file</span><br><br><span class="hljs-number">1</span>.:<span class="hljs-keyword">w</span> ! ------------------------ 缓冲区 -&gt; stdin<br><span class="hljs-number">2</span>.sudo tee % ------------ stdin -&gt; 当前缓冲区<br><br>tee 指令会从标准输入 ( stdin 也就是 <span class="hljs-number">0</span> ) 设备读取数据，将其内容输出到标准输出 ( stdout 也就是 <span class="hljs-number">1</span>) 设备，同时保存成文件。<br>语法：tee [-ai][--<span class="hljs-keyword">help</span>][--<span class="hljs-keyword">version</span>][文件...]<br>-<span class="hljs-keyword">a</span> 或 --<span class="hljs-keyword">append</span> 　附加到既有文件的后面，而非覆盖它．<br>-i 或 --ignore-interrupts 　忽略中断信号。<br>–<span class="hljs-keyword">help</span> 　在线帮助。<br>–<span class="hljs-keyword">version</span> 　显示版本信息。<br><br>使用指令 “tee” 将用户输入的数据同时保存到文件 “file1” 和 “file2” 中，输入如下命令：<br>tee file1 file2<br><br><br><br><br>缓冲区（Buffer）是一块内存区域，用于存储着正在编辑的文件。在保存缓冲区并退出时，内容也随之被写回原始文件。<br>:<span class="hljs-keyword">buffers</span> 或 :<span class="hljs-keyword">ls</span> 或 :<span class="hljs-keyword">files</span> 显示缓冲区列表。<br>第一列：缓冲区编号， 可以在编辑该文件时以此代替文件名。<br>第二列：缓冲区类型标志字符。<br>第三列：文件名，从缓冲区写入到的文件的文件名。内存 =&gt; 磁盘。<br>第四列：上次退出或切换缓冲区时光标所在的行号.<br><br>  % 当前缓冲区<br>  <br>  #：上一次的活动缓冲区<br>  <br>  <span class="hljs-keyword">l</span>： 被载入并显示在某窗口中的缓冲区<br>  <br>  h ：被载入但隐藏的缓冲区.<br>  <br>  = ：只读的缓冲区<br>  <br>  \- ：不可编辑的缓冲区, 其中°modifiable°选项被关闭<br>  <br>  \+ ：有改动的缓冲区<br>  缓冲区的操作：<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200517152733260.png#pic_center" alt="缓冲区的操作"></p><h2 id="GDB调试"><a href="#GDB调试" class="headerlink" title="GDB调试"></a>GDB调试</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs swift">awk &#x27;&#123;print&#125;&#x27; test.cpp<br>awk &#x27;&#123;print <span class="hljs-variable">$1</span>&#125;&#x27; test.cpp<br>awk &#x27;&#123;print <span class="hljs-variable">$1</span><span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span><span class="hljs-variable">$2</span><span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span><span class="hljs-variable">$3</span>&#125;&#x27; test.cpp<br>awk &#x27;&#123;print <span class="hljs-type">NR</span><span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span><span class="hljs-variable">$1</span><span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span><span class="hljs-variable">$2</span><span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span><span class="hljs-variable">$3</span>&#125;&#x27; test.cpp   (<span class="hljs-type">NR</span><span class="hljs-operator">=</span>number of record)<br>awk认为逗号是系统默认分隔符是空格，直接使用空格把两个连接起来了<br>awk &#x27;&#123;print <span class="hljs-type">NR</span><span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span><span class="hljs-variable">$0</span>&#125;&#x27; test.cpp   (<span class="hljs-variable">$0</span>一整行）<br>awk &#x27;&#123;print <span class="hljs-type">NF</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span> <span class="hljs-variable">$0</span>&#125;&#x27; test.cpp (<span class="hljs-type">NF每一行有多少列</span> <span class="hljs-type">Number</span> of field)<br>awk &#x27;<span class="hljs-variable">$1</span><span class="hljs-operator">==</span><span class="hljs-string">&quot;gold&quot;</span>&#123;print <span class="hljs-variable">$0</span>&#125;&#x27; test.cpp<br>awk &#x27;<span class="hljs-variable">$3</span><span class="hljs-operator">=</span><span class="hljs-number">1986</span>&#123;print <span class="hljs-variable">$0</span>&#125;&#x27; test.cpp<br>awk &#x27;<span class="hljs-type">NR</span><span class="hljs-operator">==</span><span class="hljs-number">7</span>&#123;print <span class="hljs-type">NR</span>, <span class="hljs-variable">$0</span>&#125;&#x27; test.cpp<br>awk &#x27;<span class="hljs-type">NF</span><span class="hljs-operator">==</span><span class="hljs-number">7</span>&#123;print <span class="hljs-variable">$0</span>&#125;&#x27; test.cpp<br>awk &#x27;&#123;print <span class="hljs-variable">$1</span> <span class="hljs-variable">$2</span>&#125;&#x27; 从屏幕读取数据<br>awk &#x27;<span class="hljs-type">BEGIN</span>&#123;<span class="hljs-type">FS</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;,&quot;</span>&#125;&#123;print <span class="hljs-variable">$1</span>,<span class="hljs-variable">$2</span>&#125;&#x27;<br><br></code></pre></td></tr></table></figure><h2 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="Linux用户"><a href="#Linux用户" class="headerlink" title="Linux用户"></a>Linux用户</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/</span>passwd<br><span class="hljs-regexp">/etc/g</span>roup<br><span class="hljs-regexp">/etc/</span>shadow<br></code></pre></td></tr></table></figure><h2 id="一步步来"><a href="#一步步来" class="headerlink" title="一步步来"></a>一步步来</h2><p>比如说学acwing算法中，二分学完，之后都是</p><p>其他案例同理</p><h2 id="使用层面算法原理层面"><a href="#使用层面算法原理层面" class="headerlink" title="使用层面算法原理层面"></a>使用层面算法原理层面</h2><p>比如说shell sed awd，正则表达式</p><p>多用，比如说写个shell脚本一次跑掉，软件源替换等等</p><p>局域网传输这个shell或者挂载到自己网站上下载，一键就可以搭建好自己的环境，curl或者wget</p><p>有些东西你只有一直用才能记得住，比如说shell编写</p><p>不要太高估自己，哪些tutorial就是为了方便易懂，写给你这种人看的</p><p>很多东西定义了一套规则，你需要记忆而已，比如说操作系统，网络编程</p><p>对应的就是计算机基础学科</p><h1 id="查询Linux服务器软硬件信息"><a href="#查询Linux服务器软硬件信息" class="headerlink" title="查询Linux服务器软硬件信息"></a>查询Linux服务器软硬件信息</h1><h2 id="常用信息"><a href="#常用信息" class="headerlink" title="常用信息"></a>常用信息</h2><p>常用的信息有：</p><table><thead><tr><th align="left">项目</th><th align="left">命令</th></tr></thead><tbody><tr><td align="left">cpu</td><td align="left">lscpu</td></tr><tr><td align="left"></td><td align="left">cat &#x2F;proc&#x2F;cpuinfo</td></tr><tr><td align="left">内核版本</td><td align="left">uname -a</td></tr><tr><td align="left">系统版本</td><td align="left">ls &#x2F;etc&#x2F;*release;cat &#x2F;etc&#x2F;*release</td></tr><tr><td align="left">内存大小</td><td align="left">free -h</td></tr><tr><td align="left">编译器版本</td><td align="left">gcc -v</td></tr><tr><td align="left">mpi版本</td><td align="left">mpif90 -v</td></tr><tr><td align="left">NUMA相关信息</td><td align="left">需要额外的hwloc库</td></tr><tr><td align="left">包管理</td><td align="left">apt&#x2F;dpkg是debian系, yum&#x2F;rpm是redhat系, pacman是arch系</td></tr><tr><td align="left">当前shell类型</td><td align="left">echo $0</td></tr><tr><td align="left">硬盘使用信息</td><td align="left">df -h</td></tr><tr><td align="left">PCI设备信息</td><td align="left">lspci -vvv</td></tr><tr><td align="left">查看ip</td><td align="left">ifconfig或ip addr</td></tr><tr><td align="left">查看路由</td><td align="left">route -n或ip route</td></tr><tr><td align="left">查看端口监听</td><td align="left">netstat -lutnp或ss -lutnp</td></tr><tr><td align="left">查看DNS</td><td align="left">cat &#x2F;etc&#x2F;resolv.conf</td></tr></tbody></table><p>在探测环境的过程中的一些技巧</p><table><thead><tr><th align="left">技巧</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">通过Tab键补全</td><td align="left">在探索不熟悉的路径时很有用</td></tr><tr><td align="left">type和which命令</td><td align="left">查看命令的类型和路径</td></tr></tbody></table><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>拿到一个的账号登录机器后，脑海中对一些系统信息最好有一个第一印象，在后续遇到问题的时候可能会有帮助。比如知道了包管理的方式，在编译报<code>xxx not found</code>错误的时候就可以有针对性的使用<code>dpkg -L</code>或者<code>rpm -qa</code>找包；<code>dpkg -l xxx</code>或者<code>rpm -ql xxx</code>找文件。<code>df -h</code>让我们对剩余磁盘空间有一个估计，避免llvm编译到一半磁盘不够的窘态。网络相关信息能帮助我们解决一些网络故障。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>带着问题学习</p><p>不同Linux发行版版本区别，比如说包管理工具，环境变量目录</p><p>C++什么时候用什么头文件</p><p>1.搞清动态链接，静态链接；</p><p>2.库文件目录</p><p>3.CMAKE</p><ol start="4"><li></li></ol><p>C++中插入汇编代码，asm</p><p>不同语言之间互相调用代码</p><p>编程语言架构研究，比如jvm,.net</p><h2 id="man和info-help"><a href="#man和info-help" class="headerlink" title="man和info,help"></a>man和info,help</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stata">通过<span class="hljs-keyword">type</span>查看命令是内置还是外部<br><span class="hljs-keyword">help</span>只能用于内置：<span class="hljs-keyword">help</span> <span class="hljs-keyword">cd</span><br>外部命令：cmd --<span class="hljs-keyword">help</span><br><br><span class="hljs-keyword">man</span>没有内建和外部命令的区别<br>info得到的信息比<span class="hljs-keyword">man</span>还要多，来自GNU项目，和<span class="hljs-keyword">man</span>是两个集合，有交集，若 <span class="hljs-keyword">man</span> 页包含的某个工具的概要信息在 info 中也有介绍，那么 <span class="hljs-keyword">man</span> 页中会有“请参考 info 页更详细内容”的字样。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>linux  mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/29/hello-world/"/>
    <url>/2023/01/29/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
